name: Docker Build and Push

on:
  push:
    branches:
      - develop

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Echo Secret Variable
        run: echo ${{ secrets.TEST_URL }}
      # - name: Check Disk Space
      #   run: |
      #     disk_space=$(df -h / | awk 'NR==2{print $5}')
      #     if [[ ${disk_space%?} -gt 50 ]]; then
      #       echo "Disk space is greater than 50%."
      #     else
      #       echo "Disk space is less than or equal to 50%."
      #       exit 1
      #     fi

      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          # this might remove tools that are actually needed,
          # when set to "true" but frees about 6 GB
          tool-cache: true

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Dependencies
        run: yarn
      
      # - name: 'ðŸ”— Generate GraphQL'
      #   run: yarn gql:codegen

      # - name: 'Build App'
      #   env:
      #     VITE_APP_ENV: ${{ secrets.VITE_APP_ENV }}
      #     VITE_API_URL: ${{ secrets.VITE_API_URL }}
      #     VITE_APP_NAME: ${{ secrets.VITE_APP_NAME }}
      #     VITE_HOST_URL: ${{ secrets.VITE_HOST_URL }}      
      #   run: |
      #     yarn build web --skip-nx-cache
      #     yarn infra:build

      - name: Check AWS CLI version
        run: aws --version
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS }}
            aws-region: eu-west-1

      # - name: Pulumi refresh dev
      #   if: startsWith(github.ref, 'refs/heads/develop')
      #   uses: pulumi/actions@v3
      #   with:
      #     command: refresh
      #     stack-name: mpi/ecs-dev
      #     work-dir: apps/infra
      #   env:
      #     PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}

      - name: Pulumi Set Outputs
        if: startsWith(github.ref, 'refs/heads/develop')
        id: pulumi
        uses: pulumi/actions@v3
        with:
          command: refresh
          stack-name: mpi/ecs-dev
          work-dir: apps/infra
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
      - run: echo "BUCKET_ID=${{ steps.pulumi.outputs.bucketName }}"
      - run: echo "REPO_URL=${{ steps.pulumi.outputs.repositoryUrl }}"
      - run: echo "DATABASE_URL=${{ steps.pulumi.outputs.databaseUrl }}"  
      - run: echo "IMAGE_URI=${{ steps.pulumi.outputs.imageUri }}" 

      - name: Authenticate with AWS ECR
        run: aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin ${{ steps.pulumi.outputs.repositoryUrl }}
        #730335240006.dkr.ecr.eu-west-1.amazonaws.com

      - name: Build Docker image
        run: docker build -t test . --build-arg DATABASE_URL=${{ steps.pulumi.outputs.databaseUrl }}

      - name: Pull existing Docker image
        run: docker pull ${{ steps.pulumi.outputs.imageUri }}
        #730335240006.dkr.ecr.eu-west-1.amazonaws.com/poc:latest
      - name: Pulumi deploy dev
        if: startsWith(github.ref, 'refs/heads/develop')
        uses: pulumi/actions@v3
        with:
          command: refresh
          stack-name: mpi/ecs-dev
          work-dir: apps/infra
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
      # - name: Delete existing Docker image
      #   run: docker rmi 730335240006.dkr.ecr.eu-west-1.amazonaws.com/poc:latest
      # TODO: https://www.pulumi.com/registry/packages/awsx/api-docs/ecr/repository/#lifecyclepolicy_nodejs

      # - name: Tag Docker image
      #   run: docker tag poc:latest 730335240006.dkr.ecr.eu-west-1.amazonaws.com/poc:latest

      # - name: Push Docker image to AWS ECR
      #   run: docker push 730335240006.dkr.ecr.eu-west-1.amazonaws.com/poc:latest
